{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","components/Section/Section.js","components/App.js","index.js"],"names":["module","exports","FeedbackOptions","options","onFeedback","className","s","feedbackList","map","option","type","feedbackBtn","onClick","Statistics","good","neutral","bad","total","positivePercentage","statList","item","Notification","message","notification","Section","title","children","section","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","state","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,SAAW,6BAA6B,KAAO,2B,kBCAjED,EAAOC,QAAU,CAAC,aAAe,sCAAsC,YAAc,uC,gBCArFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,aAAe,qC,4ICyBlBC,EAvBS,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,WAClC,OACE,qBAAKC,UAAWC,IAAEC,aAAlB,SACGJ,EAAQK,KAAI,SAACC,GACZ,OACE,wBAEEC,KAAK,SACLL,UAAWC,IAAEK,YACbC,QAAS,kBAAMR,EAAWK,IAJ5B,SAMGA,GALIA,S,gBCwBFI,EA9BI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,qBAAIb,UAAWC,IAAEa,SAAjB,UACE,oBAAId,UAAWC,IAAEc,KAAjB,SACE,uCAAUN,OAEZ,oBAAIT,UAAWC,IAAEc,KAAjB,SACE,0CAAaL,OAEf,oBAAIV,UAAWC,IAAEc,KAAjB,SACE,sCAASJ,OAEX,oBAAIX,UAAWC,IAAEc,KAAjB,SACE,wCAAWH,OAEb,oBAAIZ,UAAWC,IAAEc,KAAjB,SACE,oDAAuBF,EAAvB,a,gBCTOG,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGjB,UAAWC,IAAEiB,aAAhB,SAA+BD,K,gBCalBE,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,0BAASrB,UAAWC,IAAEqB,QAAtB,UACE,oBAAItB,UAAWC,IAAEmB,MAAjB,SAAyBA,IACxBC,MCoDQE,MArDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOf,EAAP,KAAagB,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOd,EAAP,KAAgBgB,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOb,EAAP,KAAYgB,EAAZ,KAIMC,EAAqB,kBAAMnB,EAAOC,EAAUC,GAC5CC,EAAQgB,IAIRf,EADJgB,KAAKC,MAAOrB,EAAOmB,IAAwB,KAoB7C,OACE,sBAAK5B,UAAU,YAAf,UACE,cAAC,EAAD,CAASoB,MAAM,wBAAf,SACE,cAAC,EAAD,CAAiBtB,QA7BV,CAAC,OAAQ,UAAW,OA6BKC,WApBd,SAACK,GACvB,OAAQA,GACN,IAAK,OACHqB,GAAQ,SAACM,GAAD,OAAWA,EAAQ,KAC3B,MACF,IAAK,UACHL,GAAW,SAACK,GAAD,OAAWA,EAAQ,KAC9B,MACF,IAAK,MACHJ,GAAO,SAACI,GAAD,OAAWA,EAAQ,KAC1B,MAEF,QACE,aASF,cAAC,EAAD,CAASX,MAAM,aAAf,SACGR,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAcI,QAAQ,4BC9ChCe,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.066ed892.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statList\":\"Statistics_statList__3BR2u\",\"item\":\"Statistics_item__1vE2T\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackList\":\"FeedbackOptions_feedbackList__2rnqP\",\"feedbackBtn\":\"FeedbackOptions_feedbackBtn__1Gh71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1C7Ma\"};","import PropTypes from \"prop-types\";\nimport s from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onFeedback }) => {\n  return (\n    <div className={s.feedbackList}>\n      {options.map((option) => {\n        return (\n          <button\n            key={option}\n            type=\"button\"\n            className={s.feedbackBtn}\n            onClick={() => onFeedback(option)}\n          >\n            {option}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired),\n  onFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport s from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <ul className={s.statList}>\n      <li className={s.item}>\n        <p>Good: {good}</p>\n      </li>\n      <li className={s.item}>\n        <p>Neutral: {neutral}</p>\n      </li>\n      <li className={s.item}>\n        <p>Bad: {bad}</p>\n      </li>\n      <li className={s.item}>\n        <p>Total: {total}</p>\n      </li>\n      <li className={s.item}>\n        <p>Positive feadback: {positivePercentage}%</p>\n      </li>\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport s from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={s.notification}>{message}</p>\n);\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport s from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => {\n  return (\n    <section className={s.section}>\n      <h2 className={s.title}>{title}</h2>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.object.isRequired,\n};\n\nexport default Section;\n","import { useState } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions/FeedbackOptions\";\nimport Statistics from \"./Statistics/Statistics\";\nimport Notification from \"./Notification/Notification\";\nimport Section from \"./Section/Section\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const keys = [\"good\", \"neutral\", \"bad\"];\n\n  const countTotalFeedback = () => good + neutral + bad;\n  const total = countTotalFeedback();\n\n  const countPositiveFeedbackPercentage = () =>\n    Math.round((good / countTotalFeedback()) * 100);\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  const onFeedbackClick = (option) => {\n    switch (option) {\n      case \"good\":\n        setGood((state) => state + 1);\n        break;\n      case \"neutral\":\n        setNeutral((state) => state + 1);\n        break;\n      case \"bad\":\n        setBad((state) => state + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions options={keys} onFeedback={onFeedbackClick} />\n      </Section>\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={positivePercentage}\n          />\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </Section>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}